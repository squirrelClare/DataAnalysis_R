dir('./')
dirName = 'D:/sel_train_data'
fileNames <- dir(path = dirName, full.names = T)
fileNames
fileNames <- dir(path = dirName)
fullFileNames <- dir(path = dirName, full.names = T)
fileNames <- dir(path = dirName)
i=1
fileName <- fileNames[i]
tmp <- strsplit(x = fileName, split = '~')
tmp
x[[1]]
tmp[[1]]
tmp[1]
tmp <- unlist(strsplit(x = fileName, split = '~'))
tmp
x <- tmp[5]
x
x <- tmp[5]
x
x <- tmp[5]
x <- tmp[4]
x
split(x,'.')
split(x,'\.')
split(x,".")
dir(path = dirName, recursive = T)
dir(path = dirName, recursive = F)
dir(path = dirName, ignore.case = T)
dir(path = dirName, ignore.case = F)
dir(path = dirName, include.dirs = F)
dir(path = dirName, include.dirs = T)
dir(path = dirName, no.. = T)
dir(path = dirName, no.. = F)
strsplit(x)
x
strsplit(x,split = '.')
x
strsplit(x,split = '/.')
strsplit(x,split = '.')
strsplit(x,split = 'c')
strsplit(x,split = '%.')
strsplit(x,split = '^.')
strsplit(x,split = '\\.')
fullFileNames <- dir(path = dirName, full.names = T)
write.csv()
fileNames <- dir(path = dirName)
fullFileNames <- dir(path = dirName, full.names = T)
fileNames <- dir(path = dirName)
for (i in seq(length(fileNames))) {
fileName <- fileNames[i]
tmp <- unlist(strsplit(x = fileName, split = '~'))
id <- tmp[1]
fDate <- tmp[2]
nDay <- as.numeric(tmp[3])
modelName <- unlist(split(tmp[4]))[1]
x <- c(x, modelName)
#
# 		if (i == 1) {
#
# 		}
}
fileName <- fileNames[i]
tmp <- unlist(strsplit(x = fileName, split = '~'))
id <- tmp[1]
fDate <- tmp[2]
nDay <- as.numeric(tmp[3])
modelName <- unlist(split(tmp[4]))[1]
x <- c(x, modelName)
fullFileNames <- dir(path = dirName, full.names = T)
fileNames <- dir(path = dirName)
for (i in seq(length(fileNames))) {
fileName <- fileNames[i]
tmp <- unlist(strsplit(x = fileName, split = '~'))
id <- tmp[1]
fDate <- tmp[2]
nDay <- as.numeric(tmp[3])
modelName <- unlist(split(tmp[4], f = '\\.'))[1]
x <- c(x, modelName)
#
# 		if (i == 1) {
#
# 		}
}
x
xx[1]
x[1]
x[2]
x <-NULL
fullFileNames <- dir(path = dirName, full.names = T)
fileNames <- dir(path = dirName)
for (i in seq(length(fileNames))) {
fileName <- fileNames[i]
tmp <- unlist(strsplit(x = fileName, split = '~'))
id <- tmp[1]
fDate <- tmp[2]
nDay <- as.numeric(tmp[3])
modelName <- unlist(split(tmp[4], f = "\\."))[1]
x <- c(x, modelName)
#
# 		if (i == 1) {
#
# 		}
}
x
tmp[4]
split(tmp[4], f = "\\.")
split(tmp[4], f = '\\.')
X <- null
X <- null
x <- NULL
fullFileNames <- dir(path = dirName, full.names = T)
fileNames <- dir(path = dirName)
for (i in seq(length(fileNames))) {
fileName <- fileNames[i]
tmp <- unlist(strsplit(x = fileName, split = '~'))
id <- tmp[1]
fDate <- tmp[2]
nDay <- as.numeric(tmp[3])
modelName <- unlist(strsplit(tmp[4], f = "\\."))[1]
x <- c(x, modelName)
#
# 		if (i == 1) {
#
# 		}
}
x
fullFileNames <- dir(path = dirName, full.names = T)
fileNames <- dir(path = dirName)
for (i in seq(length(fileNames))) {
fileName <- fileNames[i]
tmp <- unlist(strsplit(x = fileName, split = '~'))
id <- tmp[1]
fDate <- tmp[2]
nDay <- as.numeric(tmp[3])
modelName <- unlist(strsplit(tmp[4], split = "\\."))[1]
x <- c(x, modelName)
#
# 		if (i == 1) {
#
# 		}
}
x
unique(x)
x
unique(x)
x <- read.csv(file = 'D:/sel_train_data/361146~2015-07-21~7~cycleBase.csv')
y <- read.csv(file = 'D:/sel_train_data/361146~2015-07-21~7~cycleMulti.csv')
View(x)
View(y)
z <- rbind(x, y)
View(z)
r <- NULL
r <-rbin
r <- rbind(r, z)
View(r)
file.exists(sdada)
file.exists('dsa')
source('F:/r_script/zhangcongcong/logisticMethChoice_v_1_1.r', encoding = 'UTF-8')
source('F:/r_script/zhangcongcong/logisticMethChoice_v_1_1.r', encoding = 'UTF-8')
logisticMethChoice_mergePredictData(dirName)
pwd()
getwd
getwd()
source('F:/r_script/zhangcongcong/logisticMethChoice_v_1_1.r', encoding = 'UTF-8')
logisticMethChoice_mergePredictData(dirName)
source('F:/r_script/zhangcongcong/logisticMethChoice_v_1_1.r', encoding = 'UTF-8')
logisticMethChoice_mergePredictData(dirName)
source('F:/r_script/zhangcongcong/logisticMethChoice_v_1_1.r', encoding = 'UTF-8')
source('F:/r_script/zhangcongcong/logisticMethChoice_v_1_1.r', encoding = 'UTF-8')
logisticMethChoice_mergePredictData(dirName)
source('F:/r_script/zhangcongcong/logisticMethChoice_v_1_1.r', encoding = 'UTF-8')
logisticMethChoice_mergePredictData(dirName)
source('F:/r_script/zhangcongcong/logisticMethChoice_v_1_1.r', encoding = 'UTF-8')
logisticMethChoice_mergePredictData(dirName)
source('F:/r_script/zhangcongcong/logisticMethChoice_v_1_1.r', encoding = 'UTF-8')
logisticMethChoice_staticSavePerModel(preLoadDirName = './tmpdata', realLoadTableName = 'loadmonitoring_load_realtime_201507')
preLoadDirName = './tmpdata'; realLoadTableName = 'loadmonitoring_load_realtime_201507'
modelName <- "cycleBase"
preLoad <- read.csv(file = paste0(preLoadDirName, '/', modelName, '.csv'))
preLoad$X <- NULL
errorRatioData <- logisticMethChoice_errorRatioPerModel(preLoad)
forecastDate <- as.Date(preLoad$LOAD_DATE)
fDate <-as.character(min(forecastDate))	#预测起始日
tDate <-as.character(max(forecastDate))	#预测终止日
forecastDate <- as.Date(preLoad$LOAD_DATE)
fDate <-as.character(min(forecastDate))	#预测起始日
tDate <-as.character(max(forecastDate))	#预测终止日
idsOfPreLoad <- preLoad$location_id		#预测表中的id
sql <- paste0("select distinct(location_id) from ",preLoadTableName,";")
idsOfRealLoad <-unique(unlist(predictionStatic_exeLoadmonitoring(sql)))	#获取真实表中的id
idsOfIntersect <- intersect(idsOfRealLoad, idsOfPreLoad)   #获取真实值和预测值表中的公共id
idsOfPreLoad <- preLoad$location_id		#预测表中的id
sql <- paste0("select distinct(location_id) from ",realLoadTableName,";")
idsOfRealLoad <-unique(unlist(predictionStatic_exeLoadmonitoring(sql)))	#获取真实表中的id
source('F:/r_script/zhangcongcong/logisticMethChoice_v_1_1.r', encoding = 'UTF-8')
fDate <-as.character(min(forecastDate))	#预测起始日
tDate <-as.character(max(forecastDate))	#预测终止日
idsOfPreLoad <- preLoad$location_id		#预测表中的id
sql <- paste0("select distinct(location_id) from ",realLoadTableName,";")
idsOfRealLoad <-unique(unlist(logisticMethChoice_exeLoadmonitoring(sql)))	#获取真实表中的id
idsOfIntersect <- intersect(idsOfRealLoad, idsOfPreLoad)   #获取真实值和预测值表中的公共id
realLoad <- logisticMethChoice_getRealLoadData(fDate, tDate, idsOfIntersect)
fDate
tDate
idsOfIntersect
realLoad <- logisticMethChoice_getRealLoadData(fDate, tDate, idsOfIntersect, realLoadTableName)
preLoad <- preLoad[which(preLoad$location_id %in% idsOfIntersect), ]
ratioDataFrame <- NULL
#逐个id计算误差率
for (id in idsOfIntersect) {
ratioDataFrame <- rbind(ratioDataFrame,predictionStatic_getMeanErroRatioOfPerId(realLoad, preLoad, fDate, tDate, id))
}
source('F:/r_script/zhangcongcong/logisticMethChoice_v_1_1.r', encoding = 'UTF-8')
source('F:/r_script/zhangcongcong/logisticMethChoice_v_1_1.r', encoding = 'UTF-8')
source('F:/r_script/zhangcongcong/logisticMethChoice_v_1_1.r', encoding = 'UTF-8')
preLoadDirName = './tmpdata'; realLoadTableName = 'loadmonitoring_load_realtime_201507'
modelName <- "cycleBase"
preLoad <- read.csv(file = paste0(preLoadDirName, '/', modelName, '.csv'))
preLoad$X <- NULL
errorRatioData <- logisticMethChoice_errorRatioPerModel(preLoad, realLoadTableName)
source('F:/r_script/zhangcongcong/logisticMethChoice_v_1_1.r', encoding = 'UTF-8')
errorRatioData <- logisticMethChoice_errorRatioPerModel(preLoad, realLoadTableName)
View(errorRatioData)
source('F:/r_script/zhangcongcong/logisticMethChoice_v_1_1.r', encoding = 'UTF-8')
logisticMethChoice_staticSavePerModel(preLoadDirName, realLoadTableName)
print('START!!!')
preLoad <- read.csv(file = paste0(preLoadDirName, '/', modelName, '.csv'))
preLoad$X <- NULL
errorRatioData <- logisticMethChoice_errorRatioPerModel(preLoad, realLoadTableName)
write.csv(errorRatioData, paste0(preLoadDirName, '/', modelName, '_erroRatio.csv'))
getwd()
paste0(preLoadDirName, '/', modelName, '_erroRatio.csv')
modelName <- "cycleMulti"
preLoad <- read.csv(file = paste0(preLoadDirName, '/', modelName, '.csv'))
preLoad$X <- NULL
errorRatioData <- logisticMethChoice_errorRatioPerModel(preLoad, realLoadTableName)
write.csv(errorRatioData, paste0(preLoadDirName, '/', modelName, '_erroRatio.csv'))
forecastDate <- as.Date(preLoad$LOAD_DATE)
fDate <-as.character(min(forecastDate))	#预测起始日
tDate <-as.character(max(forecastDate))	#预测终止日
idsOfPreLoad <- preLoad$location_id		#预测表中的id
sql <- paste0("select distinct(location_id) from ",realLoadTableName,";")
idsOfRealLoad <-unique(unlist(logisticMethChoice_exeLoadmonitoring(sql)))	#获取真实表中的id
idsOfIntersect <- intersect(idsOfRealLoad, idsOfPreLoad)   #获取真实值和预测值表中的公共id
idsOfIntersect
realLoad <- logisticMethChoice_getRealLoadData(fDate, tDate, idsOfIntersect, realLoadTableName)
preLoad <- preLoad[which(preLoad$location_id %in% idsOfIntersect), ]
ratioDataFrame <- NULL
for (id in idsOfIntersect) {
tmp <- logisticMethChoice_getMeanErroRatioOfPerId(realLoad, preLoad, fDate, tDate, id)
if (tmp != NULL) {
ratioDataFrame <- rbind(ratioDataFrame,)
}
}
source('F:/r_script/zhangcongcong/logisticMethChoice_v_1_1.r', encoding = 'UTF-8')
logisticMethChoice_staticSavePerModel(preLoadDirName, realLoadTableName)
source('F:/r_script/zhangcongcong/logisticMethChoice_v_1_1.r', encoding = 'UTF-8')
realLoadTableNameOfPredicTime <- 'loadmonitoring_load_realtime_2015050607'
realLoadTableName <- realLoadTableNameOfPredicTime
modelNames <- c("cycleBase","cycleMulti","extendOut","loadModule1","loadModule2",
"loadMulti","simiExtend","wthCycle")
modelName <-"cycleBase"
getwd()
preLoad <- read.csv(file = paste0('./loadData/', modelName, '.csv'))
preLoad$X <- NULL
forecastDate <- as.Date(preLoad$LOAD_DATE)
fDate <-as.character(min(forecastDate))	#预测起始日
tDate <-as.character(max(forecastDate))	#预测终止日
idsOfPreLoad <- unique(preLoad$location_id)		#预测表中的id
sql <- paste0("select distinct(location_id) from ",realLoadTableName,";")
idsOfRealLoad <-unique(unlist(logisticMethChoice_exeLoadmonitoring(sql)))	#获取真实表中的id
idsOfIntersect <- intersect(idsOfRealLoad, idsOfPreLoad)   #获取真实值和预测值表中的公共id
idsOfIntersect
